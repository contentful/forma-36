// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can be controlled 1`] = `
<ReactModalMock
  ariaHideApp={false}
  bodyOpenClassName="Modal__body--open"
  className={
    Object {
      "afterOpen": "Modal__wrap--after-open",
      "base": "Modal__wrap",
      "beforeClose": "Modal__wrap--before-close",
    }
  }
  closeTimeoutMS={300}
  htmlOpenClassName="Modal__html--open"
  isOpen={true}
  onAfterOpen={[Function]}
  onRequestClose={[Function]}
  overlayClassName={
    Object {
      "afterOpen": "Modal__overlay--after-open",
      "base": "Modal__overlay Modal__overlay--centered",
      "beforeClose": "Modal__overlay--before-close",
    }
  }
  portalClassName="Modal__portal"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  style={
    Object {
      "content": Object {
        "top": 0,
      },
    }
  }
>
  <div
    className="Modal"
    data-test-id="cf-ui-modal"
    style={
      Object {
        "width": "520px",
      }
    }
  >
    <Header
      onClose={[Function]}
      testId="cf-ui-modal-header"
      title="Hello"
    />
    <Content
      testId="cf-ui-modal-content"
    >
      Content
    </Content>
    <Controls
      testId="cf-ui-modal-controls"
    >
      <button
        type="button"
      >
        Click on me
      </button>
    </Controls>
  </div>
</ReactModalMock>
`;

exports[`renders the component 1`] = `
<ReactModalMock
  ariaHideApp={false}
  bodyOpenClassName="Modal__body--open"
  className={
    Object {
      "afterOpen": "Modal__wrap--after-open",
      "base": "Modal__wrap",
      "beforeClose": "Modal__wrap--before-close",
    }
  }
  closeTimeoutMS={300}
  htmlOpenClassName="Modal__html--open"
  isOpen={true}
  onAfterOpen={[Function]}
  onRequestClose={[Function]}
  overlayClassName={
    Object {
      "afterOpen": "Modal__overlay--after-open",
      "base": "Modal__overlay Modal__overlay--centered",
      "beforeClose": "Modal__overlay--before-close",
    }
  }
  portalClassName="Modal__portal"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  style={
    Object {
      "content": Object {
        "top": 0,
      },
    }
  }
>
  <div
    className="Modal"
    data-test-id="cf-ui-modal"
    style={
      Object {
        "width": "520px",
      }
    }
  >
    <Header
      onClose={[Function]}
      testId="cf-ui-modal-header"
      title="Title"
    />
    <Content
      testId="cf-ui-modal-content"
    >
      Content
    </Content>
  </div>
</ReactModalMock>
`;

exports[`renders the component without title 1`] = `
<ReactModalMock
  ariaHideApp={false}
  bodyOpenClassName="Modal__body--open"
  className={
    Object {
      "afterOpen": "Modal__wrap--after-open",
      "base": "Modal__wrap",
      "beforeClose": "Modal__wrap--before-close",
    }
  }
  closeTimeoutMS={300}
  htmlOpenClassName="Modal__html--open"
  isOpen={true}
  onAfterOpen={[Function]}
  onRequestClose={[Function]}
  overlayClassName={
    Object {
      "afterOpen": "Modal__overlay--after-open",
      "base": "Modal__overlay Modal__overlay--centered",
      "beforeClose": "Modal__overlay--before-close",
    }
  }
  portalClassName="Modal__portal"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  style={
    Object {
      "content": Object {
        "top": 0,
      },
    }
  }
>
  <div
    className="Modal"
    data-test-id="cf-ui-modal"
    style={
      Object {
        "width": "520px",
      }
    }
  >
    <Content
      testId="cf-ui-modal-content"
    >
      Content
    </Content>
  </div>
</ReactModalMock>
`;
