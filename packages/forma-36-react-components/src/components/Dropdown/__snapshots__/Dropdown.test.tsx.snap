// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the component 1`] = `
<div
  className="Dropdown"
  data-test-id="cf-ui-dropdown"
>
  <Button
    aria-expanded={false}
    aria-haspopup="menu"
    buttonType="primary"
    disabled={false}
    indicateDropdown={false}
    isFullWidth={false}
    loading={false}
    onClick={[Function]}
    testId="cf-ui-button"
    type="button"
  >
    Toggle
  </Button>
</div>
`;

exports[`renders the component as open 1`] = `
<div
  className="Dropdown"
  data-test-id="cf-ui-dropdown"
>
  <Button
    aria-expanded={true}
    aria-haspopup="menu"
    buttonType="primary"
    disabled={false}
    indicateDropdown={false}
    isFullWidth={false}
    loading={false}
    onClick={[Function]}
    testId="cf-ui-button"
    type="button"
  >
    Toggle
  </Button>
  <DropdownContainer
    getRef={[Function]}
    isOpen={true}
    openSubmenu={[Function]}
    position="bottom-left"
    style={
      Object {
        "left": "0",
        "position": "absolute",
        "top": "0",
      }
    }
    submenu={false}
    testId="cf-ui-dropdown-container"
  >
    <DropdownList
      testId="cf-ui-dropdown-list"
    >
      <ForwardRef(DropdownListItem)
        isActive={false}
        isDisabled={false}
        isTitle={false}
        testId="cf-ui-dropdown-list-item"
      >
        entry
      </ForwardRef(DropdownListItem)>
    </DropdownList>
  </DropdownContainer>
</div>
`;

exports[`renders the component with a submenu 1`] = `
<div
  className="Dropdown"
  data-test-id="cf-ui-dropdown"
>
  <Button
    aria-expanded={true}
    aria-haspopup="menu"
    buttonType="primary"
    disabled={false}
    indicateDropdown={false}
    isFullWidth={false}
    loading={false}
    onClick={[Function]}
    testId="cf-ui-button"
    type="button"
  >
    Toggle
  </Button>
  <DropdownContainer
    getRef={[Function]}
    isOpen={true}
    openSubmenu={[Function]}
    position="bottom-left"
    style={
      Object {
        "left": "0",
        "position": "absolute",
        "top": "0",
      }
    }
    submenu={false}
    testId="cf-ui-dropdown-container"
  >
    <DropdownList
      testId="cf-ui-dropdown-list"
    >
      <ForwardRef(DropdownListItem)
        isActive={false}
        isDisabled={false}
        isTitle={false}
        testId="cf-ui-dropdown-list-item"
      >
        entry
      </ForwardRef(DropdownListItem)>
      <Dropdown
        getContainerRef={[Function]}
        isAutoalignmentEnabled={true}
        isOpen={true}
        position="bottom-left"
        submenuToggleLabel="Submenu"
        testId="cf-ui-dropdown"
      >
        <ForwardRef(DropdownListItem)
          isActive={false}
          isDisabled={false}
          isTitle={false}
          testId="cf-ui-dropdown-list-item"
        >
          entry
        </ForwardRef(DropdownListItem)>
      </Dropdown>
      ,
    </DropdownList>
  </DropdownContainer>
</div>
`;

exports[`renders the component with an additional class name 1`] = `
<div
  className="Dropdown"
  data-test-id="cf-ui-dropdown"
>
  <Button
    aria-expanded={false}
    aria-haspopup="menu"
    buttonType="primary"
    disabled={false}
    indicateDropdown={false}
    isFullWidth={false}
    loading={false}
    onClick={[Function]}
    testId="cf-ui-button"
    type="button"
  >
    Toggle
  </Button>
</div>
`;
