// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the button as link 1`] = `
<a
  className="Button Button--primary"
  data-test-id="cf-ui-button"
  disabled={false}
  href="/"
  onBlur={[Function]}
  onClick={[Function]}
  type="button"
>
  <TabFocusTrap
    extraClassNames="Button__inner-wrapper"
  >
    <span
      className="Button__label"
    >
      Button link
    </span>
    <CSSTransition
      classNames={
        Object {
          "enter": "Button--spinner--enter",
          "enterActive": "Button--spinner-active",
          "exit": "Button--spinner--exit",
          "exitActive": "Button--spinner-exit-active",
        }
      }
      in={false}
      mountOnEnter={true}
      timeout={1000}
      unmountOnExit={true}
    >
      <Spinner
        color="white"
        extraClassNames="Button__spinner"
        size="small"
        testId="cf-ui-spinner"
      />
    </CSSTransition>
  </TabFocusTrap>
</a>
`;

exports[`renders the component 1`] = `
<button
  className="Button Button--primary"
  data-test-id="cf-ui-button"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  type="button"
>
  <TabFocusTrap
    extraClassNames="Button__inner-wrapper"
  >
    <span
      className="Button__label"
    >
      Embed entry
    </span>
    <CSSTransition
      classNames={
        Object {
          "enter": "Button--spinner--enter",
          "enterActive": "Button--spinner-active",
          "exit": "Button--spinner--exit",
          "exitActive": "Button--spinner-exit-active",
        }
      }
      in={false}
      mountOnEnter={true}
      timeout={1000}
      unmountOnExit={true}
    >
      <Spinner
        color="white"
        extraClassNames="Button__spinner"
        size="small"
        testId="cf-ui-spinner"
      />
    </CSSTransition>
  </TabFocusTrap>
</button>
`;

exports[`renders the component as naked 1`] = `
<button
  className="Button Button--naked"
  data-test-id="cf-ui-button"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  type="button"
>
  <TabFocusTrap
    extraClassNames="Button__inner-wrapper"
  >
    <span
      className="Button__label"
    >
      Embed entry
    </span>
    <CSSTransition
      classNames={
        Object {
          "enter": "Button--spinner--enter",
          "enterActive": "Button--spinner-active",
          "exit": "Button--spinner--exit",
          "exitActive": "Button--spinner-exit-active",
        }
      }
      in={false}
      mountOnEnter={true}
      timeout={1000}
      unmountOnExit={true}
    >
      <Spinner
        color="default"
        extraClassNames="Button__spinner"
        size="small"
        testId="cf-ui-spinner"
      />
    </CSSTransition>
  </TabFocusTrap>
</button>
`;

exports[`renders the component as primary 1`] = `
<button
  className="Button Button--primary"
  data-test-id="cf-ui-button"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  type="button"
>
  <TabFocusTrap
    extraClassNames="Button__inner-wrapper"
  >
    <span
      className="Button__label"
    >
      Embed entry
    </span>
    <CSSTransition
      classNames={
        Object {
          "enter": "Button--spinner--enter",
          "enterActive": "Button--spinner-active",
          "exit": "Button--spinner--exit",
          "exitActive": "Button--spinner-exit-active",
        }
      }
      in={false}
      mountOnEnter={true}
      timeout={1000}
      unmountOnExit={true}
    >
      <Spinner
        color="white"
        extraClassNames="Button__spinner"
        size="small"
        testId="cf-ui-spinner"
      />
    </CSSTransition>
  </TabFocusTrap>
</button>
`;

exports[`renders the component disabled 1`] = `
<button
  className="Button Button--primary Button--disabled"
  data-test-id="cf-ui-button"
  disabled={true}
  href={null}
  onBlur={[Function]}
  onClick={[Function]}
  type="button"
>
  <TabFocusTrap
    extraClassNames="Button__inner-wrapper"
  >
    <span
      className="Button__label"
    >
      Embed entry
    </span>
    <CSSTransition
      classNames={
        Object {
          "enter": "Button--spinner--enter",
          "enterActive": "Button--spinner-active",
          "exit": "Button--spinner--exit",
          "exitActive": "Button--spinner-exit-active",
        }
      }
      in={false}
      mountOnEnter={true}
      timeout={1000}
      unmountOnExit={true}
    >
      <Spinner
        color="white"
        extraClassNames="Button__spinner"
        size="small"
        testId="cf-ui-spinner"
      />
    </CSSTransition>
  </TabFocusTrap>
</button>
`;

exports[`renders the component full width 1`] = `
<button
  className="Button Button--primary Button--full-width"
  data-test-id="cf-ui-button"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  type="button"
>
  <TabFocusTrap
    extraClassNames="Button__inner-wrapper"
  >
    <span
      className="Button__label"
    >
      Embed entry
    </span>
    <CSSTransition
      classNames={
        Object {
          "enter": "Button--spinner--enter",
          "enterActive": "Button--spinner-active",
          "exit": "Button--spinner--exit",
          "exitActive": "Button--spinner-exit-active",
        }
      }
      in={false}
      mountOnEnter={true}
      timeout={1000}
      unmountOnExit={true}
    >
      <Spinner
        color="white"
        extraClassNames="Button__spinner"
        size="small"
        testId="cf-ui-spinner"
      />
    </CSSTransition>
  </TabFocusTrap>
</button>
`;

exports[`renders the component in loading state 1`] = `
<button
  className="Button Button--primary"
  data-test-id="cf-ui-button"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  type="button"
>
  <TabFocusTrap
    extraClassNames="Button__inner-wrapper"
  >
    <span
      className="Button__label"
    >
      Embed entry
    </span>
    <CSSTransition
      classNames={
        Object {
          "enter": "Button--spinner--enter",
          "enterActive": "Button--spinner-active",
          "exit": "Button--spinner--exit",
          "exitActive": "Button--spinner-exit-active",
        }
      }
      in={true}
      mountOnEnter={true}
      timeout={1000}
      unmountOnExit={true}
    >
      <Spinner
        color="white"
        extraClassNames="Button__spinner"
        size="small"
        testId="cf-ui-spinner"
      />
    </CSSTransition>
  </TabFocusTrap>
</button>
`;

exports[`renders the component with an additional class name 1`] = `
<button
  className="Button my-extra-class Button--primary"
  data-test-id="cf-ui-button"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  type="button"
>
  <TabFocusTrap
    extraClassNames="Button__inner-wrapper"
  >
    <span
      className="Button__label"
    >
      Embed entry
    </span>
    <CSSTransition
      classNames={
        Object {
          "enter": "Button--spinner--enter",
          "enterActive": "Button--spinner-active",
          "exit": "Button--spinner--exit",
          "exitActive": "Button--spinner-exit-active",
        }
      }
      in={false}
      mountOnEnter={true}
      timeout={1000}
      unmountOnExit={true}
    >
      <Spinner
        color="white"
        extraClassNames="Button__spinner"
        size="small"
        testId="cf-ui-spinner"
      />
    </CSSTransition>
  </TabFocusTrap>
</button>
`;

exports[`renders the component with dropdown indicator 1`] = `
<button
  className="Button Button--primary"
  data-test-id="cf-ui-button"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  type="button"
>
  <TabFocusTrap
    extraClassNames="Button__inner-wrapper"
  >
    <span
      className="Button__label"
    >
      Embed Entry
    </span>
    <Icon
      color="white"
      extraClassNames="Button__dropdown-icon"
      icon="ArrowDown"
      size="small"
      testId="cf-ui-icon"
    />
    <CSSTransition
      classNames={
        Object {
          "enter": "Button--spinner--enter",
          "enterActive": "Button--spinner-active",
          "exit": "Button--spinner--exit",
          "exitActive": "Button--spinner-exit-active",
        }
      }
      in={false}
      mountOnEnter={true}
      timeout={1000}
      unmountOnExit={true}
    >
      <Spinner
        color="white"
        extraClassNames="Button__spinner"
        size="small"
        testId="cf-ui-spinner"
      />
    </CSSTransition>
  </TabFocusTrap>
</button>
`;

exports[`renders the component with icon 1`] = `
<button
  className="Button Button--primary"
  data-test-id="cf-ui-button"
  disabled={false}
  onBlur={[Function]}
  onClick={[Function]}
  type="button"
>
  <TabFocusTrap
    extraClassNames="Button__inner-wrapper"
  >
    <Icon
      color="white"
      extraClassNames="Button__icon"
      icon="ChevronUp"
      size="small"
      testId="cf-ui-icon"
    />
    <span
      className="Button__label"
    >
      Embed entry
    </span>
    <CSSTransition
      classNames={
        Object {
          "enter": "Button--spinner--enter",
          "enterActive": "Button--spinner-active",
          "exit": "Button--spinner--exit",
          "exitActive": "Button--spinner-exit-active",
        }
      }
      in={false}
      mountOnEnter={true}
      timeout={1000}
      unmountOnExit={true}
    >
      <Spinner
        color="white"
        extraClassNames="Button__spinner"
        size="small"
        testId="cf-ui-spinner"
      />
    </CSSTransition>
  </TabFocusTrap>
</button>
`;
